// Code generated by MockGen. DO NOT EDIT.
// Source: github.com/juju/juju/cmd/juju/model (interfaces: AddGenerationCommandAPI)

// Package mocks is a generated GoMock package.
package mocks

import (
	gomock "github.com/golang/mock/gomock"
	reflect "reflect"
)

// MockAddGenerationCommandAPI is a mock of AddGenerationCommandAPI interface
type MockAddGenerationCommandAPI struct {
	ctrl     *gomock.Controller
	recorder *MockAddGenerationCommandAPIMockRecorder
}

// MockAddGenerationCommandAPIMockRecorder is the mock recorder for MockAddGenerationCommandAPI
type MockAddGenerationCommandAPIMockRecorder struct {
	mock *MockAddGenerationCommandAPI
}

// NewMockAddGenerationCommandAPI creates a new mock instance
func NewMockAddGenerationCommandAPI(ctrl *gomock.Controller) *MockAddGenerationCommandAPI {
	mock := &MockAddGenerationCommandAPI{ctrl: ctrl}
	mock.recorder = &MockAddGenerationCommandAPIMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use
func (m *MockAddGenerationCommandAPI) EXPECT() *MockAddGenerationCommandAPIMockRecorder {
	return m.recorder
}

// AddGeneration mocks base method
func (m *MockAddGenerationCommandAPI) AddGeneration(arg0 string) error {
	ret := m.ctrl.Call(m, "AddGeneration", arg0)
	ret0, _ := ret[0].(error)
	return ret0
}

// AddGeneration indicates an expected call of AddGeneration
func (mr *MockAddGenerationCommandAPIMockRecorder) AddGeneration(arg0 interface{}) *gomock.Call {
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "AddGeneration", reflect.TypeOf((*MockAddGenerationCommandAPI)(nil).AddGeneration), arg0)
}

// Close mocks base method
func (m *MockAddGenerationCommandAPI) Close() error {
	ret := m.ctrl.Call(m, "Close")
	ret0, _ := ret[0].(error)
	return ret0
}

// Close indicates an expected call of Close
func (mr *MockAddGenerationCommandAPIMockRecorder) Close() *gomock.Call {
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Close", reflect.TypeOf((*MockAddGenerationCommandAPI)(nil).Close))
}
