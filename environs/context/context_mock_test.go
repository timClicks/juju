// Code generated by MockGen. DO NOT EDIT.
// Source: github.com/juju/juju/environs/context (interfaces: ModelCredentialInvalidator)

// Package context is a generated GoMock package.
package context

import (
	gomock "github.com/golang/mock/gomock"
	reflect "reflect"
)

// MockModelCredentialInvalidator is a mock of ModelCredentialInvalidator interface
type MockModelCredentialInvalidator struct {
	ctrl     *gomock.Controller
	recorder *MockModelCredentialInvalidatorMockRecorder
}

// MockModelCredentialInvalidatorMockRecorder is the mock recorder for MockModelCredentialInvalidator
type MockModelCredentialInvalidatorMockRecorder struct {
	mock *MockModelCredentialInvalidator
}

// NewMockModelCredentialInvalidator creates a new mock instance
func NewMockModelCredentialInvalidator(ctrl *gomock.Controller) *MockModelCredentialInvalidator {
	mock := &MockModelCredentialInvalidator{ctrl: ctrl}
	mock.recorder = &MockModelCredentialInvalidatorMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use
func (m *MockModelCredentialInvalidator) EXPECT() *MockModelCredentialInvalidatorMockRecorder {
	return m.recorder
}

// InvalidateModelCredential mocks base method
func (m *MockModelCredentialInvalidator) InvalidateModelCredential(arg0 string) error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "InvalidateModelCredential", arg0)
	ret0, _ := ret[0].(error)
	return ret0
}

// InvalidateModelCredential indicates an expected call of InvalidateModelCredential
func (mr *MockModelCredentialInvalidatorMockRecorder) InvalidateModelCredential(arg0 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "InvalidateModelCredential", reflect.TypeOf((*MockModelCredentialInvalidator)(nil).InvalidateModelCredential), arg0)
}
